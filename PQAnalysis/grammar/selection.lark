start: expression

expression: statement ("," statement)*

statement: atomtype
         | atom
         | element
         | index
         | indices

atomtype: word

atom: "atom("i word "," (letters | unsigned_int+) ")"

element: "elem("i (letters | unsigned_int+) ")"

residue: "res("i (letters | unsigned_int+) ")"

index.2: int

indices.2: int ("-"|"..") int (".." int)?

word: (LETTER|DIGIT)+
letters: LETTER+
unsigned_int: UNSIGNED_INT
int: INT

%import .terminals.DIGIT
%import .terminals.NEWLINE
%import .terminals.LETTER
%import .terminals.SIGNED_INT -> INT
%import .terminals.INT -> UNSIGNED_INT
%import .terminals.WS

%ignore WS